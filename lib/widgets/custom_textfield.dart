
import 'package:flutter/material.dart';
/*CustomTextField l√†m ƒë∆∞·ª£c g√¨?
Hi·ªÉn th·ªã placeholder (hintText) tr∆∞·ªõc khi nh·∫≠p.
Khi b·∫•m v√†o √¥, ch·ªØ s·∫Ω bi·∫øn m·∫•t.
N·∫øu nh·∫≠p d·ªØ li·ªáu, s·∫Ω hi·ªÉn th·ªã n√∫t x√≥a (X).
N·∫øu l√† √¥ m·∫≠t kh·∫©u, s·∫Ω c√≥ n√∫t b·∫≠t/t·∫Øt m·∫≠t kh·∫©u (üëÅ).*/

class CustomTextField extends StatefulWidget{
  final String hintText;
  final IconData icon;
  final bool isPassword;
  final TextEditingController controller;
  final FocusNode? focusNode;

  const CustomTextField({
    super.key,  //kh√¥ng c·∫ßn vi·∫øt Key? key v√† g√°n super.key
    required this.hintText,
    required this.icon,
    this.isPassword = false,
    required this.controller,
    this.focusNode,
  });
  
  @override
  State<StatefulWidget> createState() => _CustomTextFieldState();
  
}

class _CustomTextFieldState extends State<CustomTextField>{
  bool _isObscure = true;
  bool _isFocused = false;
  @override
  Widget build(BuildContext context) {
    return Focus(
      onFocusChange: (hasFocus) {
        setState(() {
          _isFocused = hasFocus;
        });
      },
      child: SizedBox(
        width: 355,
        height: 42,
        child: TextField(
          controller: widget.controller,
          obscureText: widget.isPassword ? _isObscure : false,
          decoration: InputDecoration(
            hintText: _isFocused ? "" : widget.hintText, // ·∫®n khi b·∫•m v√†o
            prefixIcon: Icon(widget.icon, color: Colors.black54),
            suffixIcon: widget.isPassword
              ? IconButton(
                  icon: Icon(
                    _isObscure ? Icons.visibility_off : Icons.visibility, 
                    color: Colors.black54), 
                  onPressed: (){
                    setState(() {
                      _isObscure = !_isObscure;
                    });
                  },
                )
                : (widget.controller.text.isNotEmpty 
                    ? IconButton(
                        icon: const Icon(Icons.cancel, color: Colors.black54), 
                        onPressed: (){
                          widget.controller.clear();
                          setState(() {});
                        },
                      )
                    : null), 
            border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(10),
              borderSide: const BorderSide(color: Colors.black12),
            ),
            filled: true,
            fillColor: Colors.grey[200],
            contentPadding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 10.0), // Adjust padding to center text
          ),
          onChanged: (text) => setState(() {}), // C·∫≠p nh·∫≠t UI khi nh·∫≠p
        ),
      ),
    );
        
  }

}